После того как программист погрузился в предметную область
задачи и проанализировал ее, задал все уточняющие вопросы
по самой задаче и разобрался как ее можно решить с точки
зрения бизнеса, можно переходить ко второму этапу.

2. Проектирование данных (доменной модели задачи).

Как вы уже знаете любое ИТ решение состоит из двух частей:
- данные
- алгоритмы.

Данные представляют информацию с которой работают алгоритмы.

Для создания алгоритмов программы нужно чётко понимать и
представлять те данные (информацию), которую они будут обрабатывать.

Поэтому обычно работу над задачей начинают с проектирования
данных (другими словами с разработки доменной модели задачи).

Под разработкой доменной модели понимается ее создание в
таком виде, в котором с ней можно будет работать внутри программы.

Что это значит?

Это значит, что должен быть создан программный код для
представления всех важных для задачи данных внутри программы.

В высказывании выше есть две ключевые фразы:
- важных для задачи данных;
- представление данных внутри программы.

Важных для задачи означает, что модель данных должна уметь
представлять не все данные во всем мире, а только данные которые
используются в задаче. Данные не относящиеся к задаче, не должны
присутствовать в модели данных.

Представление данных внутри программы - означает, что должен быть
создан программный код, с помощью которого можно будет представлять
данные внутри программы.

Для создания хорошей модели данных нужно из описания задачи выделить
сущности, которые там упоминаются. Сущности в тексте описываются
существительными. Перед тем как читать дальше, попробуйте выделить
те сущности о которых на ваш взгляд идёт реч в описании задачи.


У нас получился следующий список:
страховой полис
объект страхования
под объект страхования

Далее нужно понять какими свойствами обладают (описываются)
данные сущности в рамках наше задачи.

Перед тем как читать дальше попробуйте расписать свойства
каждой сущности.


У нас получился следующее:

Страховой полис:
    - номер
    - статус
    - список объектов страхования

Объект страхования:
    - имя
    - список под объектов страхования

Под объект страхования:
    - имя
    - страховая сумма
    - тип риска



Данные внутри программы представляются в виде объектов